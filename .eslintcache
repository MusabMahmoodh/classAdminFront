[{"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\index.js":"1","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\students.jsx":"2","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\dashboard.jsx":"3","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\viewExam.js":"4","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\exams\\ExamList.js":"5","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\subscriptions\\AddSubscriptionForm.js":"6","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\app.jsx":"7","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\auth\\Login.js":"8","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\API\\api.js":"9","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\students\\StudentList.jsx":"10","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\students\\AddStudentForm.js":"11","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\students\\UpdateStudent.js":"12","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\exams\\Essay.js":"13","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\updateExam.js":"14","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\subscriptions\\SubscriptionsList.js":"15","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\subscriptions\\ViewSubscription.js":"16","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\UpdateStudents.jsx":"17","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\subscriptions.jsx":"18","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\ProtectedRoute.js":"19","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\exams\\Mcqs.js":"20","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\students\\ViewStudent.js":"21","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\exams\\ExamDetails.js":"22","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\students\\PasswordReset.js":"23","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\subscriptions\\Subscribe\\AddSubscribers.js":"24","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\subscriptions\\Subscribe\\Subscribers.js":"25","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\viewSubscription.js":"26","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\exams.jsx":"27","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\dahsboard\\DashPage.js":"28","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\dahsboard\\Batch.js":"29","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\dahsboard\\AddBatch.js":"30","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\viewBatch.js":"31","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\addExam.js":"32","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\subscriptions\\AddSubscription.js":"33","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\context\\TeacherContext.js":"34","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\dahsboard\\Header.jsx":"35","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\auth\\AuthOptions.js":"36"},{"size":202,"mtime":1609747071834,"results":"37","hashOfConfig":"38"},{"size":305,"mtime":1609052957617,"results":"39","hashOfConfig":"38"},{"size":785,"mtime":1609652354686,"results":"40","hashOfConfig":"38"},{"size":2298,"mtime":1609657569392,"results":"41","hashOfConfig":"38"},{"size":2297,"mtime":1609688067669,"results":"42","hashOfConfig":"38"},{"size":3132,"mtime":1609647897711,"results":"43","hashOfConfig":"38"},{"size":6626,"mtime":1609747097315,"results":"44","hashOfConfig":"38"},{"size":2008,"mtime":1609746886886,"results":"45","hashOfConfig":"38"},{"size":3555,"mtime":1609996037811,"results":"46","hashOfConfig":"38"},{"size":2060,"mtime":1609519110278,"results":"47","hashOfConfig":"38"},{"size":3947,"mtime":1609518179261,"results":"48","hashOfConfig":"38"},{"size":4013,"mtime":1609518371930,"results":"49","hashOfConfig":"38"},{"size":8258,"mtime":1610009204838,"results":"50","hashOfConfig":"38"},{"size":9681,"mtime":1609648863243,"results":"51","hashOfConfig":"38"},{"size":2680,"mtime":1609687420201,"results":"52","hashOfConfig":"38"},{"size":4011,"mtime":1609656771601,"results":"53","hashOfConfig":"38"},{"size":311,"mtime":1608963786372,"results":"54","hashOfConfig":"38"},{"size":363,"mtime":1609058470307,"results":"55","hashOfConfig":"38"},{"size":700,"mtime":1609597034239,"results":"56","hashOfConfig":"38"},{"size":3027,"mtime":1608872485649,"results":"57","hashOfConfig":"38"},{"size":1085,"mtime":1609521070489,"results":"58","hashOfConfig":"38"},{"size":1397,"mtime":1609657723108,"results":"59","hashOfConfig":"38"},{"size":1239,"mtime":1609517117491,"results":"60","hashOfConfig":"38"},{"size":675,"mtime":1609528807133,"results":"61","hashOfConfig":"38"},{"size":673,"mtime":1609605954316,"results":"62","hashOfConfig":"38"},{"size":304,"mtime":1608969761187,"results":"63","hashOfConfig":"38"},{"size":417,"mtime":1609657187646,"results":"64","hashOfConfig":"38"},{"size":368,"mtime":1609685504904,"results":"65","hashOfConfig":"38"},{"size":680,"mtime":1609685529927,"results":"66","hashOfConfig":"38"},{"size":2203,"mtime":1609652532607,"results":"67","hashOfConfig":"38"},{"size":292,"mtime":1609654444296,"results":"68","hashOfConfig":"38"},{"size":972,"mtime":1609657334067,"results":"69","hashOfConfig":"38"},{"size":915,"mtime":1608833057979,"results":"70","hashOfConfig":"38"},{"size":79,"mtime":1609435690759,"results":"71","hashOfConfig":"38"},{"size":997,"mtime":1609746035941,"results":"72","hashOfConfig":"38"},{"size":702,"mtime":1609746941133,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"fdfrql",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\index.js",[],["158","159"],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\students.jsx",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\dashboard.jsx",["160","161"],"import React,{useEffect,useState,useContext} from 'react'\r\nimport * as api from \"../API/api.js\";\r\nimport UserContext from \"../context/TeacherContext\";\r\nimport DashPage  from \"../components/dahsboard/DashPage\"\r\nimport AddBatch  from \"../components/dahsboard/AddBatch\"\r\n\r\nconst Dashboard = () => {\r\n    const {\r\n        setBatches,\r\n        batches,\r\n        userData,\r\n      } = useContext(UserContext);\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            const response = await api.fetchBatches(userData.token);\r\n            setBatches(response.data);\r\n        }\r\n        fetchData()\r\n    },[])\r\n    return (\r\n        <div>\r\n            <AddBatch />\r\n            <DashPage batches={batches}/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n",["162","163"],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\viewExam.js",["164","165"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\n\r\nimport * as api from \"../API/api\";\r\nimport ExamDetails from \"../components/exams/ExamDetails.js\";\r\nimport QuestionPanel from \"../components/questions/QuestionPanel.js\";\r\nimport UserContext from \"../context/TeacherContext\";\r\nconst ViewExam = () => {\r\n  let history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [batch, setBatch] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [subscription, setSubscription] = useState(\"\");\r\n  const [interval, setInterval] = useState({ hour: \"\", minutes: \"\" });\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const { userData } = useContext(UserContext);\r\n  //console.log(id);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await api.fetchExam(id, userData.token);\r\n        //console.log(res.data);\r\n        setName(res.data.name);\r\n        setBatch(res.data.batch.name);\r\n        setStartTime(res.data.start_time);\r\n        setEndTime(res.data.end_time);\r\n        setSubscription(res.data.subscription.name);\r\n        setInterval({\r\n          hour: res.data.interval[0].hour,\r\n          minutes: res.data.interval[0].minutes,\r\n        });\r\n        setQuestion(res.data.question.imageBase64);\r\n        setAnswer(res.data.answer.imageBase64);\r\n      } catch (error) {\r\n        //console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n      <Tab eventKey=\"home\" title=\"Details\">\r\n        <ExamDetails\r\n          name={name}\r\n          batch={batch}\r\n          startTime={startTime}\r\n          endTime={endTime}\r\n          subscription={subscription}\r\n          interval={interval}\r\n        />\r\n        {//console.log(question)}\r\n      </Tab>\r\n      <Tab eventKey=\"profile\" title=\"Question\">\r\n        <QuestionPanel question={question} answer={answer} />\r\n      </Tab>\r\n      <Tab eventKey=\"contact\" title=\"Submissions\" disabled></Tab>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default ViewExam;\r\n","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\exams\\ExamList.js",["166","167"],"import React, { useEffect, useContext } from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as api from \"../../API/api\";\r\nimport UserContext from \"../../context/TeacherContext\";\r\nexport default function ExamList() {\r\n  const { exams, setExams, userData } = useContext(UserContext);\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await api.fetchExams(userData.token);\r\n        // //console.log(response.data);\r\n        setExams(response.data);\r\n        // //console.log(response.data);\r\n      } catch (error) {\r\n        //console.log(\"Error\");\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const res = await api.deleteExam(id);\r\n      setExams(exams.filter((exam) => exam._id !== id));\r\n      // //console.log(exams);\r\n      // //console.log(res);\r\n    } catch (error) {}\r\n  };\r\n  return (\r\n    <Table responsive>\r\n      <thead>\r\n        <tr>\r\n          <th>Exam</th>\r\n          <th>Batch</th>\r\n          <th>Subscription</th>\r\n          {/* <th>Question_type_id</th> */}\r\n          <th>View</th>\r\n          <th>Edit</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {exams &&\r\n          exams.map((st) => (\r\n            <tr key={st._id}>\r\n              <td>{st.name}</td>\r\n              <td>{st.batch.name}</td>\r\n              <td>{st.subscription.name}</td>\r\n              {/* <td>{st.question_type_id}</td> */}\r\n              <td>\r\n                <Button\r\n                  variant=\"warning\"\r\n                  size=\"sm\"\r\n                  onClick={() => history.push(`/exams/${st._id}`)}\r\n                >\r\n                  View\r\n                </Button>\r\n              </td>\r\n              <td>\r\n                <Button variant=\"info\" size=\"sm\">\r\n                  Update\r\n                </Button>\r\n              </td>\r\n              <td>\r\n                <Button\r\n                  variant=\"danger\"\r\n                  size=\"sm\"\r\n                  onClick={() => handleDelete(st._id)}\r\n                >\r\n                  Remove\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n",["168","169"],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\subscriptions\\AddSubscriptionForm.js",["170"],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\app.jsx",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\auth\\Login.js",["171"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Card } from \"react-bootstrap\";\r\nimport UserContext from \"../../context/TeacherContext\";\r\nimport * as api from \"../../API/api.js\";\r\n\r\nexport default function Login() {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const { userData, setUserData, login } = useContext(UserContext);\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const loginUser = { name, password };\r\n      const loginRes = await api.login(loginUser);\r\n      //console.log(loginRes);\r\n      setUserData({\r\n        ...userData,\r\n        token: loginRes.data.token,\r\n        user: loginRes.data.user,\r\n      });\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n      login();\r\n    } catch (err) {\r\n      //console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <Card>\r\n        <Card.Header>Login</Card.Header>\r\n        <Card.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Enter name </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n              <Form.Text className=\"text-muted\">hmmm</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={submit}>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\API\\api.js",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\students\\StudentList.jsx",["172"],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\students\\AddStudentForm.js",["173","174"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport UserContext from \"../../context/TeacherContext\";\r\nimport * as api from \"../../API/api\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst AddStudentForm = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [index, setIndex] = useState(\"\");\r\n  const [batch, setBatch] = useState(\"0\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { students, addStudent, setBatches, batches, userData } = useContext(\r\n    UserContext\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await api.fetchBatches(userData.token);\r\n        setBatches(response.data);\r\n        //console.log(response.data);\r\n      } catch (error) {\r\n        //console.log(\"Error\");\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const newStudent = {\r\n        name,\r\n        batch,\r\n        password,\r\n        indexNo: index,\r\n      };\r\n      const response = await api.createStudent(newStudent, userData.token);\r\n      // //console.log(response.data.indexNo);\r\n      if (response.data) {\r\n        addStudent(response.data);\r\n        // //console.log(students);\r\n        setName(\"\");\r\n        setBatch(\"\");\r\n        setPassword(\"\");\r\n        setIndex(\"\");\r\n        toast.success(\"Successfully created !\", {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      } else {\r\n        alert(\"Filed\");\r\n        toast.error(\"Creation failed!\", {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n\r\n      // //console.log(response);\r\n    } catch (error) {\r\n      //console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Form className=\"p-1\">\r\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n        <Form.Label>Index</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"enter student index here\"\r\n          value={index}\r\n          onChange={(e) => setIndex(e.target.value)}\r\n          maxLength=\"6\"\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n        <Form.Label>Student Name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"enter student name here\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n        <Form.Label>Select Batch</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          value={batch}\r\n          onChange={(e) => setBatch(e.target.value)}\r\n        >\r\n          <option value=\"0\" disabled>\r\n            Select batch\r\n          </option>\r\n          {batches &&\r\n            batches.map((batch) => (\r\n              <option value={batch._id}>{batch.name}</option>\r\n            ))}\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n        <Form.Label>Set password</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"enter password here\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Button\r\n          variant=\"success\"\r\n          size=\"lg\"\r\n          block\r\n          type=\"submit\"\r\n          onClick={handleSubmit}\r\n        >\r\n          Add student\r\n        </Button>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddStudentForm;\r\n","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\students\\UpdateStudent.js",["175","176"],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\exams\\Essay.js",["177","178"],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\updateExam.js",["179"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Form, Button, Image, Jumbotron } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport FileBase from \"react-file-base64\";\r\nimport * as api from \"../API/api.js\";\r\nimport UserContext from \"../context/TeacherContext\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nexport const UpdateExam = () => {\r\n  let history = useHistory();\r\n  const { id } = useParams();\r\n  const [name, setName] = useState(\"\");\r\n  const [question, setQuestion] = useState({\r\n    name: \"\",\r\n    type: \"\",\r\n    base64: \"\",\r\n  });\r\n  const [answer, setAnswer] = useState({\r\n    name: \"\",\r\n    type: \"\",\r\n    base64: \"\",\r\n  });\r\n  const [batch, setBatch] = useState(\"0\");\r\n  const [batchId, setBatchId] = useState(\"0\");\r\n  const [type, setType] = useState(false);\r\n  const [subscription, setSubscription] = useState(\"0\");\r\n  const [subId, setSubId] = useState(\"0\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [endTime, setEndTime] = useState(null);\r\n  const [duration, setDuration] = useState({\r\n    hour: 0,\r\n    minutes: 0,\r\n  });\r\n  const {\r\n    subscriptions,\r\n    setSubscriptions,\r\n    setBatches,\r\n    batches,\r\n    userData,\r\n  } = useContext(UserContext);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await api.fetchBatches(userData.token);\r\n        setBatches(response.data);\r\n\r\n        const responseB = await api.fetchSubscriptions(userData.token);\r\n        setSubscriptions(responseB.data);\r\n\r\n        const res = await api.fetchExam(id, userData.token);\r\n        //console.log(res.data.interval);\r\n        setName(res.data.name);\r\n        setBatch(res.data.batch.name);\r\n        setBatchId(res.data.batch._id);\r\n        setStartTime(Date.parse(res.data.start_time));\r\n        setEndTime(Date.parse(res.data.end_time));\r\n        setSubscription(res.data.subscription.name);\r\n        setDescription(res.data.description);\r\n        setSubId(res.data.subscription._id);\r\n        setDuration({\r\n          ...duration,\r\n          hour: res.data.interval[0].hour,\r\n          minutes: res.data.interval[0].minutes,\r\n        });\r\n        setType(res.data.type);\r\n        setQuestion({\r\n          ...question,\r\n          name: res.data.question.filename,\r\n          type: res.data.question.contentType,\r\n          base64: res.data.question.imageBase64,\r\n        });\r\n        setAnswer({\r\n          ...answer,\r\n          name: res.data.answer.filename,\r\n          type: res.data.answer.contentType,\r\n          base64: res.data.answer.imageBase64,\r\n        });\r\n        //console.log(question);\r\n      } catch (error) {\r\n        //console.log(\"Error\");\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newExam = {\r\n        name,\r\n        batch: batchId,\r\n        subscription: subId,\r\n        end_time: endTime,\r\n        start_time: startTime,\r\n        interval: duration,\r\n        question,\r\n        answer,\r\n        description,\r\n        type,\r\n      };\r\n      const response = await api.updateExam(id, newExam, userData.token);\r\n      if (response.status === 204) {\r\n        toast.success(\"Successfully updated !\", {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n        history.push(\"/exams\");\r\n      } else {\r\n        toast.error(\"Updation failed!\", {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n      // //console.log(response.data.data);\r\n    } catch (error) {\r\n      toast.error(\"Creation failed!\", {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      //console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Form>\r\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n        <Form.Label>Exam Name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"enter student name here\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n        <Form.Label>Select Batch</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          value={batch}\r\n          onChange={(e) => setBatch(e.target.value)}\r\n        >\r\n          <option value={batchId}>{batch}</option>\r\n          {batches &&\r\n            batches.map((batch) => {\r\n              if (batch._id !== batchId) {\r\n                return <option value={batch._id}>{batch.name}</option>;\r\n              } else {\r\n                return null;\r\n              }\r\n            })}\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n        <Form.Label>Slect Subscription</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          value={subscription}\r\n          onChange={(e) => setSubscription(e.target.value)}\r\n        >\r\n          <option value={subId}>{subscription}</option>\r\n          {subscriptions &&\r\n            subscriptions.map((sub) => {\r\n              if (sub._id !== subId) {\r\n                return <option value={sub._id}>{sub.name}</option>;\r\n              } else {\r\n                return null;\r\n              }\r\n            })}\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n        <Form.Label>Slect type(exam/normal question)</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          value={type}\r\n          onChange={(e) => setType(e.target.value)}\r\n        >\r\n          <option value={false}>Noraml Question</option>\r\n          <option value={true}>Essay</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Form.Row>\r\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n          <Form.Label>StartsAt</Form.Label>\r\n          <DatePicker\r\n            selected={startTime}\r\n            onChange={(date) => setStartTime(date)}\r\n            minDate={new Date()}\r\n            showTimeSelect\r\n            closeWidgets\r\n            DateTimePicker\r\n            dateFormat=\"dd-MM-yyyy HH:mm:ss\"\r\n            maxDate={new Date() + 5}\r\n            isClearable\r\n            meIntervals={15}\r\n            showYearDropdown\r\n            scrollableYearDropdown\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n          <Form.Label>EndsAt</Form.Label>\r\n          <DatePicker\r\n            selected={endTime}\r\n            onChange={(date) => setEndTime(date)}\r\n            minDate={new Date()}\r\n            showTimeSelect\r\n            closeWidgets\r\n            DateTimePicker\r\n            dateFormat=\"dd-MM-yyyy HH:mm:ss\"\r\n            isClearable\r\n            meIntervals={15}\r\n            showYearDropdown\r\n            scrollableYearDropdown\r\n          />\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Form.Row>\r\n        <Form.Label>Duration</Form.Label>\r\n        <br />\r\n        <Form.Group>\r\n          <Form.Control\r\n            size=\"sm\"\r\n            type=\"number\"\r\n            placeholder=\"Hours\"\r\n            max=\"8\"\r\n            min=\"0\"\r\n            value={duration.hour}\r\n            onChange={(e) => setDuration({ ...duration, hour: e.target.value })}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            size=\"sm\"\r\n            type=\"number\"\r\n            placeholder=\"minutes\"\r\n            max=\"59\"\r\n            min=\"0\"\r\n            value={duration.minutes}\r\n            onChange={(e) =>\r\n              setDuration({ ...duration, minutes: e.target.value })\r\n            }\r\n          />\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n        <Form.Label>Change question</Form.Label>\r\n        <Jumbotron fluid>\r\n          <Image src={`${question.base64}`} alt=\"question\" fluid />\r\n        </Jumbotron>\r\n        <br />\r\n        <FileBase\r\n          type=\"file\"\r\n          multiple={false}\r\n          onDone={(base64) => setQuestion(base64)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n        <Form.Label>Add answers</Form.Label>\r\n\r\n        {answer.base64 !== \"\" ? (\r\n          <Jumbotron fluid>\r\n            <Image src={`${answer.base64}`} alt=\"Answer not available \" fluid />\r\n          </Jumbotron>\r\n        ) : null}\r\n\r\n        <br />\r\n        <FileBase\r\n          type=\"file\"\r\n          multiple={false}\r\n          onDone={(base64) => setAnswer(base64)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n        <Form.Label>Description</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={3}\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Button\r\n        className=\"secondary\"\r\n        size=\"lg\"\r\n        type=\"submit\"\r\n        onClick={handleSubmit}\r\n        block\r\n      >\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\nexport default UpdateExam;\r\n",["180","181"],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\subscriptions\\SubscriptionsList.js",["182","183"],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\subscriptions\\ViewSubscription.js",["184","185","186"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as api from \"../../API/api\";\r\nimport Subscribers from \"./Subscribe/Subscribers\";\r\nimport AddSubscribers from \"./Subscribe/AddSubscribers\";\r\nimport UserContext from \"../../context/TeacherContext\";\r\n\r\nconst ViewSubscription = () => {\r\n  const { id } = useParams();\r\n  // let history = useHistory();\r\n  const { students, setStudents, userData } = useContext(UserContext);\r\n  const [subscribers, setSubscribers] = useState([]);\r\n  const [nonSubscribers, setNonSubscribers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await api.fetchStudents(userData.token);\r\n        setStudents(response.data);\r\n        const res = await api.fetchSubscription(id, userData.token);\r\n        setSubscribers(res.data.students);\r\n      } catch (error) {\r\n        //console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  useEffect(() => {\r\n    setNonSubscribers(\r\n      students.filter((o) => !subscribers.some((v) => v.indexNo === o.indexNo))\r\n    );\r\n  }, [subscribers]);\r\n  const removeSubscriber = async (student) => {\r\n    // //console.log(id, { stu_id: student._id }, userData.token);\r\n    try {\r\n      const response = await api.removeSubscribers(\r\n        id,\r\n        { stu_id: student._id },\r\n        userData.token\r\n      );\r\n      //console.log(response);\r\n      if (response.status === 204) {\r\n        setSubscribers(subscribers.filter((sub) => sub._id !== student._id));\r\n        // //console.log(students);\r\n        toast.success(\"Successfully removed !\", {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      } else {\r\n        alert(\"Failed\");\r\n        toast.error(\"Removal failed!\", {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n      //console.log(response);\r\n    } catch (error) {\r\n      //console.log(error);\r\n    }\r\n  };\r\n  const addSubscriber = async (student) => {\r\n    try {\r\n      const response = await api.updateSubscribers(\r\n        id,\r\n        { stu_id: student._id },\r\n        userData.token\r\n      );\r\n      // //console.log(response);\r\n      if (response.status === 204) {\r\n        setSubscribers([...subscribers, student]);\r\n        // //console.log(students);\r\n        toast.success(\"Successfully added !\", {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      } else {\r\n        alert(\"Failed\");\r\n        toast.error(\"Creation failed!\", {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n\r\n      // //console.log(response);\r\n    } catch (error) {\r\n      //console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n      <Tab eventKey=\"profile\" title=\"Students\">\r\n        <Subscribers\r\n          subscribers={subscribers}\r\n          removeSubscriber={removeSubscriber}\r\n        />\r\n      </Tab>\r\n      <Tab eventKey=\"home\" title=\"Add students\">\r\n        <AddSubscribers\r\n          nonSubscribers={nonSubscribers}\r\n          addSubscriber={addSubscriber}\r\n        />\r\n      </Tab>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default ViewSubscription;\r\n","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\UpdateStudents.jsx",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\subscriptions.jsx",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\ProtectedRoute.js",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\exams\\Mcqs.js",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\students\\ViewStudent.js",["187","188","189","190"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport * as api from \"../../API/api\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport UserContext from \"../../context/TeacherContext\";\r\nconst ViewStudent = () => {\r\n  let { id } = useParams();\r\n  const [student, setStudent] = useState([]);\r\n  const { userData } = useContext(UserContext);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await api.fetchStudent(id, userData.token);\r\n        // //console.log(response.data);\r\n        setStudent(response.data);\r\n      } catch (error) {\r\n        //console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, {});\r\n  return (\r\n    <Card>\r\n      <Card.Header as=\"h5\">Featured</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>Special title treatment</Card.Title>\r\n        <Card.Text>\r\n          With supporting text below as a natural lead-in to additional content.\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ViewStudent;\r\n","C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\exams\\ExamDetails.js",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\students\\PasswordReset.js",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\subscriptions\\Subscribe\\AddSubscribers.js",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\subscriptions\\Subscribe\\Subscribers.js",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\viewSubscription.js",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\exams.jsx",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\dahsboard\\DashPage.js",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\dahsboard\\Batch.js",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\dahsboard\\AddBatch.js",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\viewBatch.js",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\routes\\addExam.js",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\subscriptions\\AddSubscription.js",["191"],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\context\\TeacherContext.js",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\dahsboard\\Header.jsx",[],"C:\\Users\\MUSAB_PC\\Desktop\\projects\\PERN\\class\\client\\src\\components\\auth\\AuthOptions.js",["192"],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":1,"column":25,"nodeType":"199","messageId":"200","endLine":1,"endColumn":33},{"ruleId":"201","severity":1,"message":"202","line":19,"column":7,"nodeType":"203","endLine":19,"endColumn":9,"suggestions":"204"},{"ruleId":"193","replacedBy":"205"},{"ruleId":"195","replacedBy":"206"},{"ruleId":"197","severity":1,"message":"207","line":10,"column":7,"nodeType":"199","messageId":"200","endLine":10,"endColumn":14},{"ruleId":"201","severity":1,"message":"208","line":44,"column":6,"nodeType":"203","endLine":44,"endColumn":8,"suggestions":"209"},{"ruleId":"201","severity":1,"message":"210","line":21,"column":6,"nodeType":"203","endLine":21,"endColumn":8,"suggestions":"211"},{"ruleId":"197","severity":1,"message":"212","line":24,"column":13,"nodeType":"199","messageId":"200","endLine":24,"endColumn":16},{"ruleId":"193","replacedBy":"213"},{"ruleId":"195","replacedBy":"214"},{"ruleId":"201","severity":1,"message":"202","line":26,"column":6,"nodeType":"203","endLine":26,"endColumn":8,"suggestions":"215"},{"ruleId":"197","severity":1,"message":"216","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":20},{"ruleId":"201","severity":1,"message":"217","line":22,"column":8,"nodeType":"203","endLine":22,"endColumn":21,"suggestions":"218"},{"ruleId":"197","severity":1,"message":"219","line":13,"column":11,"nodeType":"199","messageId":"200","endLine":13,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":29,"column":6,"nodeType":"203","endLine":29,"endColumn":8,"suggestions":"220"},{"ruleId":"197","severity":1,"message":"221","line":12,"column":11,"nodeType":"199","messageId":"200","endLine":12,"endColumn":21},{"ruleId":"201","severity":1,"message":"222","line":35,"column":6,"nodeType":"203","endLine":35,"endColumn":8,"suggestions":"223"},{"ruleId":"197","severity":1,"message":"224","line":3,"column":8,"nodeType":"199","messageId":"200","endLine":3,"endColumn":18},{"ruleId":"201","severity":1,"message":"225","line":58,"column":6,"nodeType":"203","endLine":58,"endColumn":8,"suggestions":"226"},{"ruleId":"201","severity":1,"message":"227","line":89,"column":6,"nodeType":"203","endLine":89,"endColumn":8,"suggestions":"228"},{"ruleId":"193","replacedBy":"229"},{"ruleId":"195","replacedBy":"230"},{"ruleId":"201","severity":1,"message":"231","line":29,"column":6,"nodeType":"203","endLine":29,"endColumn":8,"suggestions":"232"},{"ruleId":"197","severity":1,"message":"212","line":32,"column":13,"nodeType":"199","messageId":"200","endLine":32,"endColumn":16},{"ruleId":"197","severity":1,"message":"216","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":20},{"ruleId":"201","severity":1,"message":"233","line":31,"column":6,"nodeType":"203","endLine":31,"endColumn":8,"suggestions":"234"},{"ruleId":"201","severity":1,"message":"235","line":36,"column":6,"nodeType":"203","endLine":36,"endColumn":19,"suggestions":"236"},{"ruleId":"197","severity":1,"message":"216","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":20},{"ruleId":"197","severity":1,"message":"237","line":8,"column":10,"nodeType":"199","messageId":"200","endLine":8,"endColumn":17},{"ruleId":"201","severity":1,"message":"238","line":22,"column":6,"nodeType":"239","endLine":22,"endColumn":8},{"ruleId":"201","severity":1,"message":"208","line":22,"column":6,"nodeType":"239","endLine":22,"endColumn":8,"suggestions":"240"},{"ruleId":"197","severity":1,"message":"241","line":2,"column":27,"nodeType":"199","messageId":"200","endLine":2,"endColumn":33},{"ruleId":"197","severity":1,"message":"242","line":10,"column":9,"nodeType":"199","messageId":"200","endLine":10,"endColumn":14},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setBatches' and 'userData.token'. Either include them or remove the dependency array.","ArrayExpression",["245"],["243"],["244"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'userData.token'. Either include them or remove the dependency array.",["246"],"React Hook useEffect has missing dependencies: 'setExams' and 'userData.token'. Either include them or remove the dependency array.",["247"],"'res' is assigned a value but never used.",["243"],["244"],["248"],"'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'userData.token'. Either include it or remove the dependency array.",["249"],"'students' is assigned a value but never used.",["250"],"'addStudent' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'setBatches', and 'userData.token'. Either include them or remove the dependency array.",["251"],"'DatePicker' is defined but never used.","React Hook useEffect has missing dependencies: 'setBatches', 'setSubscriptions', and 'userData.token'. Either include them or remove the dependency array.",["252"],"React Hook useEffect has missing dependencies: 'answer', 'duration', 'id', 'question', 'setBatches', 'setSubscriptions', and 'userData.token'. Either include them or remove the dependency array. You can also do a functional update 'setDuration(d => ...)' if you only need 'duration' in the 'setDuration' call.",["253"],["243"],["244"],"React Hook useEffect has missing dependencies: 'props.batchId', 'setSubscriptions', 'subscriptions', and 'userData.token'. Either include them or remove the dependency array. If 'setSelectedSubscriptions' needs the current value of 'props.batchId', you can also switch to useReducer instead of useState and read 'props.batchId' in the reducer.",["254"],"React Hook useEffect has missing dependencies: 'id', 'setStudents', and 'userData.token'. Either include them or remove the dependency array.",["255"],"React Hook useEffect has a missing dependency: 'students'. Either include it or remove the dependency array.",["256"],"'student' is assigned a value but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","ObjectExpression",["257"],"'Button' is defined but never used.","'login' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"258","fix":"264"},{"desc":"265","fix":"266"},{"desc":"258","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"260","fix":"280"},"Update the dependencies array to be: [setBatches, userData.token]",{"range":"281","text":"282"},"Update the dependencies array to be: [id, userData.token]",{"range":"283","text":"284"},"Update the dependencies array to be: [setExams, userData.token]",{"range":"285","text":"286"},{"range":"287","text":"282"},"Update the dependencies array to be: [setStudents, userData.token]",{"range":"288","text":"289"},{"range":"290","text":"282"},"Update the dependencies array to be: [id, setBatches, userData.token]",{"range":"291","text":"292"},"Update the dependencies array to be: [setBatches, setSubscriptions, userData.token]",{"range":"293","text":"294"},"Update the dependencies array to be: [answer, duration, id, question, setBatches, setSubscriptions, userData.token]",{"range":"295","text":"296"},"Update the dependencies array to be: [props.batchId, setSubscriptions, subscriptions, userData.token]",{"range":"297","text":"298"},"Update the dependencies array to be: [id, setStudents, userData.token]",{"range":"299","text":"300"},"Update the dependencies array to be: [students, subscribers]",{"range":"301","text":"302"},{"range":"303","text":"284"},[614,616],"[setBatches, userData.token]",[1662,1664],"[id, userData.token]",[729,731],"[setExams, userData.token]",[829,831],[688,701],"[setStudents, userData.token]",[923,925],[1352,1354],"[id, setBatches, userData.token]",[1864,1866],"[setBatches, setSubscriptions, userData.token]",[2940,2942],"[answer, duration, id, question, setBatches, setSubscriptions, userData.token]",[1055,1057],"[props.batchId, setSubscriptions, subscriptions, userData.token]",[1142,1144],"[id, setStudents, userData.token]",[1287,1300],"[students, subscribers]",[728,730]]